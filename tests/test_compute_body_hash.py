from pathlib import Path import json import runpy def test_compute_and_verify_body_hash(sandbox_repo, monkeypatch, tmp_path): repo = sandbox_repo entry = repo / "canonized" / "fixtures" / "entry_valid.md" # Write a correct body hash into frontmatter by running update mode script = repo / "tools" / "compute_body_hash.py" assert script.exists() # Simulate CLI: update frontmatter import sys argv = sys.argv sys.argv = ["compute_body_hash.py", "--root", str(repo), "--glob", "canonized/**/*.md", "--update-frontmatter", "--canon-eol", "--strip-trailing-space", "--strip-html-comments", "--format", "json", "--report", "-"] try: runpy.run_path(str(script), run_name="__main__") finally: sys.argv = argv # Now run verify (strict) to ensure no mismatches out = tmp_path / "report.txt" sys.argv = ["compute_body_hash.py", "--root", str(repo), "--glob", "canonized/**/*.md", "--strict", "--format", "text", "--report", str(out)] try: code = runpy.run_path(str(script), run_name="__main__") finally: sys.argv = argv assert out.exists() # Check that report mentions OK or UPDATED status txt = out.read_text(encoding="utf-8") assert "MISMATCH" not in txt