import sys, runpy from pathlib import Path SAMPLE = """ AWS creds: AKIAEXAMPLEKEY000000 Token: github_pat_11AABBCCDDEEFFGGHHIIJJKKLLMMNNOOPPQQRRSSTTUUVVWWXXYYZZ_aBcDeFgHiJkLmNoPqRsTuVwXyZ0123456789 Random looking: 3f9aA1B2C3D4E5F6G7H8I9J0KLMNOPQRST """ def test_secret_scan_detects_and_allowlist(sandbox_repo, tmp_path): # Write a sample file tgt = sandbox_repo / "canonized" / "fixtures" / "secrets.md" tgt.write_text(SAMPLE, encoding="utf-8") # Create allowlist that suppresses the fake AKIA key allow = sandbox_repo / ".secretignore" allow.write_text(r"AKIAEXAMPLEKEY000000", encoding="utf-8") script = sandbox_repo / "tools" / "secret_scan.py" out = tmp_path / "secrets.txt" import sys argv = sys.argv sys.argv = ["secret_scan.py", "--root", str(sandbox_repo), "--format", "text", "--report", str(out)] try: runpy.run_path(str(script), run_name="__main__") finally: sys.argv = argv txt = out.read_text(encoding="utf-8") # The GitHub PAT-like token should still be reported (not allowlisted) assert "GITHUB_TOKEN" in txt or "HIGH_ENTROPY" in txt