import os import sys from pathlib import Path import types import pytest def repo_root(tmp_path_factory): root = tmp_path_factory.mktemp("repo") return root @pytest.fixture def sandbox_repo(repo_root): """Create a temporary repo-like layout with tools/ and sample content copied from sandbox.""" root = repo_root # Create minimal structure (root / "canonized").mkdir(parents=True, exist_ok=True) (root / "intake").mkdir(parents=True, exist_ok=True) (root / "templates").mkdir(parents=True, exist_ok=True) (root / "tools").mkdir(parents=True, exist_ok=True) # Copy tool scripts from sandbox if present from shutil import copy2 sandbox_tools = Path("/mnt/data/tools") for name in ["build_index.py","check_links.py","secret_scan.py","hash_attachments.py","compute_body_hash.py"]: src = sandbox_tools / name if src.exists(): copy2(src, root / "tools" / name) # Copy fixtures from shutil import copytree, copy2 fx_md = Path("/mnt/data/tests/fixtures/md") fx_att = Path("/mnt/data/tests/fixtures/attachments") (root / "canonized" / "fixtures").mkdir(parents=True, exist_ok=True) copy2(fx_md / "entry_valid.md", root / "canonized" / "fixtures" / "entry_valid.md") copy2(fx_md / "entry_bad_anchor.md", root / "canonized" / "fixtures" / "entry_bad_anchor.md") copy2(fx_md / "entry_no_frontmatter.md", root / "canonized" / "fixtures" / "entry_no_frontmatter.md") (root / "canonized" / "attachments").mkdir(parents=True, exist_ok=True) copy2(fx_att / "sample.bin", root / "canonized" / "attachments" / "sample.bin") return root